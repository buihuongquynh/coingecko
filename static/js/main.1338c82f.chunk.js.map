{"version":3,"sources":["state/actions/action.type.js","components/drops/Drop.js","state/actions/table.action.js","components/header/coingecko-logo-d13d6bcceddbb003f146b33c2f7e8193d72b93bb343d38e392897c3df3e78bdd (1).webp","components/header/header.js","constants/constant.js","components/item/item.js","components/table/table.js","App.js","reportWebVitals.js","state/reducers/currency.js","state/reducers/data-currency.js","state/reducers/val-currency.js","state/reducers/index.js","services/config.services.js","services/table.services.js","state/sagas/sagas.js","state/store/store.js","index.js"],"names":["actions","GET_DATA_CURRENCY","GET_DATA_CURRENCY_SUCCESS","GET_VAL_CURRENCY","GET_VAL_CURRENCY_SUCCESS","GET_DATA","GET_DATA_SUCCESS","Drop","dispatch","useDispatch","dataListCurrency","useSelector","state","currency","data","useEffect","type","Actions","arr","map","item","value","onChange","e","payload","persist","target","header","className","href","src","logo","placeholder","PERCENT_1H","PERCENT_24H","PERCENT_7D","Item","props","formatter","Intl","NumberFormat","style","itemCurrency","minimumFractionDigits","percent_1h","parseFloat","KEY","toFixed","percent_24h","percent_7d","arrItem","format","isNaN","Table","dataList","listData","index","query","error","App","dataCurrency","valCurrency","console","log","vs_currency","price_change_percentage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","action","rootReducer","combineReducers","CurrencyReducer","dataCurrencyReducer","valCurrencyReducer","axiosClient","axios","create","baseURL","headers","paramsSerializer","params","m","join","newParam","queryString","stringify","encode","interceptors","response","use","TableService","get","fetchCurrency","fetchChangeValCurrency","fetchUser","mySaga","rootSaga","call","listCurrency","list","put","message","user","takeLatest","all","sagaMiddleware","createSagaMiddleware","storeApp","configureStore","reducer","middleware","run","store","children","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1338c82f.chunk.js","sourcesContent":["const actions = {\r\n    GET_DATA_CURRENCY: \"GET_DATA_CURRENCY\",\r\n    GET_DATA_CURRENCY_SUCCESS: \"GET_DATA_CURRENCY_SUCCESS\",\r\n    GET_VAL_CURRENCY: \"GET_VAL_CURRENCY\",\r\n    GET_VAL_CURRENCY_SUCCESS: \"GET_VAL_CURRENCY_SUCCESS\",\r\n    GET_DATA: \"GET_DATA\",\r\n    GET_DATA_SUCCESS: \"GET_DATA_SUCCESS\"\r\n  };\r\n  export default actions;\r\n  ","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Actions } from \"../../state/actions\";\r\nimport { getValCurrency } from \"../../state/actions/table.action\";\r\n\r\nfunction Drop() {\r\n  const dispatch = useDispatch();\r\n  const dataListCurrency = useSelector((state) => state.currency.data);\r\n  useEffect(() => {\r\n    dispatch({ type: Actions.GET_DATA_CURRENCY });\r\n  }, []);\r\n  let arr = [];\r\n  if (dataListCurrency) {\r\n    arr = dataListCurrency.map((item) => (\r\n      <option value={item} key={item}>\r\n        {item}\r\n      </option>\r\n    ));\r\n  }\r\n  return <select  onChange={(e) => {\r\n    e.persist();\r\n    dispatch(getValCurrency(e.target.value));\r\n  }}>{dataListCurrency ? arr : null}</select>;\r\n}\r\nexport default Drop;\r\n","import Actions from \"./action.type\";\r\nexport const getDataCurrency = () => ({\r\n  type: Actions.GET_DATA_CURRENCY\r\n});\r\n\r\nexport const getDataCurrencySuccess = (payload) => ({\r\n  type: Actions.GET_DATA_CURRENCY_SUCCESS,\r\n  payload\r\n});\r\nexport const getValCurrency = (payload) => ({\r\n  type: Actions.GET_VAL_CURRENCY,\r\n  payload\r\n});\r\nexport const getValCurrencySuccess = (payload) => ({\r\n  type: Actions.GET_VAL_CURRENCY_SUCCESS,\r\n  payload\r\n});\r\n\r\nexport const getData = (payload) => ({\r\n  type: Actions.GET_DATA,\r\n  payload\r\n});\r\n","export default __webpack_public_path__ + \"static/media/coingecko-logo-d13d6bcceddbb003f146b33c2f7e8193d72b93bb343d38e392897c3df3e78bdd (1).6dcea3b1.webp\";","import React from 'react';\r\nimport Drop from \"../drops/Drop\";\r\nimport logo from './coingecko-logo-d13d6bcceddbb003f146b33c2f7e8193d72b93bb343d38e392897c3df3e78bdd (1).webp';\r\nconst header = () => {\r\n    return (\r\n        <div>\r\n             <div className=\"header\">\r\n        <div className=\"header__top\">\r\n          <ul>\r\n            <li><a href=\"s\">EN <i className = \"fas fa-caret-down\"></i></a></li>\r\n            <li><a href=\"s\">BCH <i className = \"fas fa-caret-down\"></i> </a></li>\r\n            <li><a href=\"s\">Help <img src=\"https://static.coingecko.com/s/candy_notification-13bfd4ea8bd89d20951b5bd2045b30c9ebb912ac6ec73c020234ab37de7be52f.svg\"></img></a></li>\r\n            <li><a href=\"s\">Sign</a></li>\r\n            <li><a href=\"s\">Sign Up</a></li>\r\n            <li><a href=\"s\"><i className=\"fas fa-bookmark text-black\" /></a></li>\r\n            <li><a href=\"s\"><i className=\"fas text-2xs fa-moon\" /></a></li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"header__menu\">\r\n        <div className=\"logo\">\r\n           <img src = {logo}/>\r\n        </div>\r\n          <ul>\r\n            <li><a href=\"d\">Home</a></li>\r\n            <li><a href=\"d\">Markets</a></li>\r\n            <li><a href=\"d\">DeFi</a></li>\r\n            <li><a href=\"d\">Farms <span> 🧑‍🌾</span></a></li>\r\n            <li><a href=\"d\">Exchanges</a></li>\r\n            <li><a href=\"d\">News</a></li>\r\n            <li><a href=\"d\">Tools</a></li>\r\n            <li><a href=\"d\">Resources</a></li>\r\n            <li><a href=\"d\">Learn</a></li>\r\n            <li><a href=\"d\">Community</a></li>\r\n          </ul>\r\n          <input type=\"text\" placeholder =\"Search\" />\r\n        </div>\r\n        <div className=\"header__drop\">\r\n          <h1>Top 100 Coins by Market Capitalization</h1>\r\n          <div className=\"row\">\r\n            <div className=\"row__right\">\r\n              <div className=\"drop\">\r\n              </div>\r\n              <ul>\r\n                <Drop/>\r\n                <li><a href=\"d\"> Filter</a></li>\r\n                <li><a href=\"d\"> <i className=\"fas star-color mr-2 fa-globe\" /> Portfolio</a></li>\r\n                <li><a href=\"d\"><i className=\"fas star-color mr-2 fa-circle\" /> Explore All Coins</a></li>\r\n                <li><a href=\"d\"><i className=\"fas star-color mr-2 fa-star\" /> Recently Added</a></li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"row__left\">\r\n              <ul>\r\n                <li><a href=\"d\"> Market</a></li>\r\n                <li><a href=\"d\"> All-Time High</a></li>\r\n                <li><a href=\"d\"> Developer</a></li>\r\n                <li><a href=\"d\">Social</a></li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default header;","export const BASE_URL = 'https://api.coingecko.com/api/v3';\r\n\r\n// key of table\r\n\r\nexport const MARKET_RANK = 'market_cap_rank';\r\nexport const IMAGE = 'image';\r\nexport const SYMBOL = 'symbol';\r\nexport const PRICE = 'current_price';\r\nexport const PERCENT_1H = 'price_change_percentage_1h_in_currency';\r\nexport const PERCENT_24H = 'price_change_percentage_24h_in_currency';\r\nexport const PERCENT_7D = 'price_change_percentage_7d_in_currency';\r\nexport const PER_1h = '1h%2C';\r\nexport const PER_24h = '24h%2C';\r\nexport const PER_7d = '7d';\r\nexport const VOLUME = 'total_volume';\r\nexport const MKT_CAP = 'market_cap';\r\n// sort \r\nexport const MARKET_CAP_DESC = 'market_cap_desc';\r\nexport const VOLUME_DESC = 'volume_desc';\r\nexport const VOLUME_ASC = 'volume_asc';\r\nexport const GECKO_DESC = 'gecko_desc';\r\nexport const GECKO_ASC = 'gecko_asc';\r\nexport const MARKET_CAP_ASC = 'market_cap_asc';\r\n\r\n\r\n\r\n","// eslint-disable-next-line no-unused-vars\r\nimport React, { useEffect } from \"react\";\r\nimport * as KEY from '../../constants/constant';\r\nconst Item = (props) => {\r\n  const { item } = props;\r\n  const formatter = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: props.itemCurrency,\r\n    minimumFractionDigits: 0\r\n  });\r\n\r\n  let percent_1h = parseFloat(item[KEY.PERCENT_1H]).toFixed(2);\r\n  let percent_24h = parseFloat(item[KEY.PERCENT_24H]).toFixed(2);\r\n  let percent_7d = parseFloat(item[KEY.PERCENT_7D]).toFixed(2);\r\n\r\n  const arrItem = (\r\n    <>\r\n      <td className=\"item star\">\r\n        <span>\r\n          <i className=\"far fa-star\"></i>\r\n        </span>{\" \"}\r\n        {item[KEY.MARKET_RANK]}\r\n      </td>\r\n\r\n      <td className=\"item logo\">\r\n        {\" \"}\r\n        <div className=\"item-small\">\r\n          {\" \"}\r\n          <img src={item[KEY.IMAGE]} /> <h3>{item[\"name\"]}</h3>\r\n        </div>{\" \"}\r\n        <h5 className=\"upcase\">{item[KEY.SYMBOL]}</h5>{\" \"}\r\n      </td>\r\n      <td className=\"item\">{formatter.format(item[KEY.PRICE])}</td>\r\n      {item[KEY.PERCENT_1H] > 0 ? (\r\n        <td className=\"item green-num\">{percent_1h}%</td>\r\n      ) : (\r\n        <td className=\"item red-num\">\r\n          {isNaN(percent_1h) ? `--` : `${percent_1h}%`}\r\n        </td>\r\n      )}\r\n      {item[KEY.PERCENT_24H] > 0 ? (\r\n        <td className=\"item green-num\">{percent_24h}%</td>\r\n      ) : (\r\n        <td className=\"item red-num\">\r\n          {isNaN(percent_24h) ? `--` : `${percent_24h}%`}\r\n        </td>\r\n      )}\r\n      {item[KEY.PERCENT_7D] > 0 ? (\r\n        <td className=\"item green-num\">{percent_7d}%</td>\r\n      ) : (\r\n        <td className=\"item red-num\">\r\n          {isNaN(percent_7d) ? `--` : `${percent_7d}%`}\r\n        </td>\r\n      )}\r\n      <td className=\"item\">{formatter.format(item[KEY.VOLUME])}</td>\r\n      <td className=\"item\">{formatter.format(item[KEY.MKT_CAP])}</td>\r\n    </>\r\n  );\r\n  return <tr className=\"list-row-item\">{arrItem}</tr>;\r\n};\r\n\r\nexport default Item;\r\n","import React, { useEffect } from \"react\";\r\nimport Item from \"../item/item\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Actions } from \"../../state/actions\";\r\nconst Table = (props) => {\r\n  const { dataList } = props;\r\n  let listData = null;\r\n  const dispatch = useDispatch();\r\n  if (dataList) {\r\n    listData = dataList.map((item, index) => (\r\n      <Item itemCurrency={props.currency} key={index} item={item} />\r\n    ));\r\n  }\r\n  useEffect(() => {\r\n    try {\r\n      dispatch({ type: Actions.GET_DATA, payload: props.query });\r\n    } catch (error) {}\r\n  }, [props.currency]);\r\n  return <div>{dataList ? <table>{listData}</table> : null}</div>;\r\n};\r\nexport default Table;\r\n","import React from \"react\";\r\nimport Header from \"./components/header/header\";\r\nimport Table from \"./components/table/table\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { PER_1h, PER_24h, PER_7d } from \"./constants/constant\";\r\nimport './App.css'\r\nfunction App() {\r\n  const dataList = useSelector((state) => state.dataCurrency.data);\r\n  const valCurrency = useSelector((state) => state.valCurrency.data);\r\n  console.log(valCurrency);\r\n  const query = {\r\n    vs_currency: valCurrency,\r\n    // order: state,\r\n    // per_page: 100,\r\n    // page: 1,\r\n    // sparkline: false,\r\n    price_change_percentage: [PER_1h, PER_24h, PER_7d]\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header/>\r\n      <Table dataList={dataList} currency={valCurrency} query={query} />\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\nimport { Actions } from '../actions';\r\nconst initialState = {\r\n  data: null\r\n};\r\nconst currency = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case Actions.GET_DATA_CURRENCY_SUCCESS: {\r\n      const { payload: data } = action;\r\n      return {\r\n        ...state,\r\n        data\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default currency;\r\n","import { Actions } from \"../actions\";\r\nconst initialState = {\r\n  data: null\r\n};\r\n\r\nconst dataCurrency = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case Actions.GET_DATA_SUCCESS: {\r\n      const { payload: data } = action;\r\n      return {\r\n        ...state,\r\n        data\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataCurrency;\r\n","\r\nimport { Actions } from '../actions';\r\nconst initialState = {\r\n    data: 'btc'\r\n};\r\n\r\nconst valCurrency = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Actions.GET_VAL_CURRENCY_SUCCESS: {\r\n            const { payload: data } = action;\r\n            return {\r\n                ...state,\r\n                data\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nexport default valCurrency;\r\n","import { combineReducers } from \"redux\";\r\nimport CurrencyReducer from \"./currency\";\r\nimport dataCurrencyReducer from \"./data-currency\";\r\nimport valCurrencyReducer from \"./val-currency\";\r\n// Combine reducer\r\nconst rootReducer = combineReducers({\r\n  currency: CurrencyReducer,\r\n  dataCurrency: dataCurrencyReducer,\r\n  valCurrency: valCurrencyReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import * as URLS from '../constants/constant';\r\nimport axios from 'axios';\r\nimport queryString from 'query-string';\r\n\r\nconst axiosClient = axios.create({\r\n    baseURL: URLS.BASE_URL,\r\n    headers: {\r\n        'content-type': 'application/json'\r\n    },\r\n    paramsSerializer: params => {\r\n        const m = params.price_change_percentage.join('');\r\n        const newParam = { ...params, price_change_percentage: m };\r\n        return queryString.stringify(newParam, {\r\n            encode: false\r\n        });\r\n    },\r\n});\r\naxiosClient.interceptors.response.use((response) => {\r\n    if (response && response.data) {\r\n        return response.data;\r\n    }\r\n    return response;\r\n}, (error) => {\r\n    throw error;\r\n});\r\nexport default axiosClient;","import axiosClient from './config.services';\r\n\r\nclass TableService {\r\n\r\n  static list(query) {\r\n    // return fetchData(query);\r\n    const url = '/coins/markets';\r\n    return axiosClient.get(url, { params: query });\r\n  }\r\n  static listCurrency() {\r\n    const url = '/simple/supported_vs_currencies';\r\n    return axiosClient.get(url);\r\n  }\r\n\r\n}\r\nexport default TableService;\r\n","import { call, put, takeLatest, all } from \"redux-saga/effects\";\r\nimport {\r\n  Actions,\r\n  getDataCurrencySuccess,\r\n  getValCurrencySuccess\r\n} from \"../actions\";\r\nimport TableService from \"../../services/table.services\";\r\nfunction* fetchCurrency() {\r\n  try {\r\n    const list = yield call(TableService.listCurrency);\r\n    yield put(getDataCurrencySuccess(list));\r\n  } catch (e) {\r\n    yield put({ type: \"USER_FETCH_FAILED\", message: e.message });\r\n  }\r\n}\r\n\r\nfunction* fetchChangeValCurrency(action) {\r\n  try {\r\n    yield put(getValCurrencySuccess(action.payload));\r\n  } catch (e) {\r\n    yield put({ type: \"USER_FETCH_FAILED\", message: e.message });\r\n  }\r\n}\r\nfunction* fetchUser(action) {\r\n  try {\r\n    const user = yield call(TableService.list, action.payload);\r\n\r\n    yield put({ type: Actions.GET_DATA_SUCCESS, payload: user });\r\n  } catch (e) {\r\n    yield put({ type: \"USER_FETCH_FAILED\", message: e.message });\r\n  }\r\n}\r\nfunction* mySaga() {\r\n  yield takeLatest(Actions.GET_DATA_CURRENCY, fetchCurrency);\r\n  yield takeLatest(Actions.GET_VAL_CURRENCY, fetchChangeValCurrency);\r\n  yield takeLatest(Actions.GET_DATA, fetchUser);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([mySaga()]);\r\n}\r\n","// eslint-disable-next-line no-unused-vars\r\nimport React from 'react';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport createSagaMiddleware from 'redux-saga';\r\n// eslint-disable-next-line no-unused-vars\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from '../reducers/index';\r\nimport rootSaga from '../sagas/sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst storeApp = configureStore(\r\n  {\r\n    reducer: rootReducer,\r\n    middleware: [sagaMiddleware]\r\n  }\r\n);\r\nconst store = (props) => {\r\n  return (\r\n    <Provider store={storeApp}>\r\n      {props.children}\r\n    </Provider>\r\n  );;\r\n};\r\nsagaMiddleware.run(rootSaga);\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Store from './state/store/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Store><App /></Store>\r\n    \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}